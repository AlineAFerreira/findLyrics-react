{"version":3,"sources":["assets/images/4.png","store/reducers/lyrics.js","store/storeConfig.js","store/types/lyrics.js","store/actions/lyrics.js","styles.jsx","services/lyrics.js","components/AsideContainer/styles.js","components/AsideContainer/index.jsx","components/Loading/styles.js","components/Loading/index.jsx","components/Search/styles.js","components/Search/index.jsx","components/Recents/styles.js","components/Recents/index.jsx","components/Results/styles.js","components/Results/index.jsx","components/Lyrics/styles.js","components/Lyrics/index.jsx","components/Footer/styles.js","components/Footer/index.jsx","App.jsx","index.js"],"names":["module","exports","INITIAL_STATE","isFirstLoad","searchValue","results","noResults","recents","lyrics","loading","showRecents","reducers","combineReducers","state","action","JSON","parse","localStorage","getItem","type","payload","storeConfig","createStore","bool","showLyrics","array","refreshResults","createGlobalStyle","lyricsService","term","axios","res","data","urlEnc","Aside","styled","aside","MainHeader","h1","SecundaryHeader","h2","AsideContainer","show","keyframes","BoxLoading","div","Loading","BoxSearch","InputSearch","input","ButtonSearch","button","TextAlert","span","connect","props","placeholder","onFocus","e","target","select","onKeyUp","handleKeyUp","onChange","handleChange","value","onClick","handleSearch","size","className","BoxRecents","TitleRecents","RecentsContent","RecentsItem","Song","Artist","BoxNoRecents","values","map","item","key","id","lyricsParams","artist","song","cover","src","alt","getRecents","Image","BoxResults","TitleResults","ResultsItem","BoxImg","SongInfo","artistPicture","album","BoxLyrics","pre","BackButton","controlPage","Container","Link","a","Footer","href","dispatch","refreshLoading","updateSearchValue","setNoResults","refreshLyrics","displayResults","setShowRecents","length","enc","encodeURI","temp","then","result","forEach","index","push","title","name","picture","findLyrics","storeData","catch","error","toast","s","c","i","isOnRecents","lastSearch","crtSearch","setItem","stringify","Lyrics","store","configStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.47315be5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/4.3b427476.png\";","import { UPDATE_LOADING, UPDATE_SEARCH_VALUE, UPDATE_RECENTS_VISIBILITY, UPDATE_LYRICS_VISIBILITY, UPDATE_RESULTS, UPDATE_NO_RESULTS } from './../types/lyrics';\r\n\r\nconst INITIAL_STATE = {\r\n    isFirstLoad: true,\r\n    searchValue: '',\r\n    results: [],\r\n    noResults: false,\r\n    recents: [],\r\n    lyrics: [],\r\n    loading: false,\r\n    showRecents: true\r\n}\r\n\r\nexport default function(state = INITIAL_STATE, action){\r\n    state.recents = JSON.parse(localStorage.getItem('lastSearches'));\r\n\r\n    switch (action.type) {\r\n        case UPDATE_LOADING:\r\n            return {\r\n                ...state,\r\n                loading: action.payload\r\n            }\r\n        case UPDATE_SEARCH_VALUE:\r\n            return {\r\n                ...state,\r\n                searchValue: action.payload\r\n            }\r\n        case UPDATE_RESULTS:\r\n            return {\r\n                ...state,\r\n                results: action.payload\r\n            }\r\n        case UPDATE_NO_RESULTS:\r\n            return {\r\n                ...state,\r\n                noResults: action.payload\r\n            }\r\n        case UPDATE_RECENTS_VISIBILITY:\r\n            return {\r\n                ...state,\r\n                showRecents: action.payload\r\n            }\r\n        case UPDATE_LYRICS_VISIBILITY:\r\n            return {\r\n                ...state,\r\n                lyrics: action.payload\r\n            }    \r\n\r\n        default:\r\n          return state\r\n    }\r\n}\r\n\r\n\r\n\r\n","import { createStore, combineReducers } from 'redux';\r\nimport lyrics from './reducers/lyrics';\r\n\r\nconst reducers = combineReducers({\r\n    lyrics \r\n});\r\n\r\nfunction storeConfig() {\r\n    return createStore(reducers)\r\n}\r\n\r\nexport default storeConfig;","export const UPDATE_LOADING = 'UPDATE_LOADING';\r\nexport const UPDATE_SEARCH_VALUE = 'UPDATE_SEARCH_VALUE';\r\nexport const UPDATE_RECENTS_VISIBILITY = 'UPDATE_RECENTS_VISIBILITY';\r\nexport const UPDATE_LYRICS_VISIBILITY = 'UPDATE_LYRICS_VISIBILITY';\r\nexport const UPDATE_RESULTS = 'UPDATE_RESULTS';\r\nexport const UPDATE_NO_RESULTS = 'UPDATE_NO_RESULTS';\r\n\r\n\r\n\r\n","import { UPDATE_LOADING, UPDATE_SEARCH_VALUE, UPDATE_RECENTS_VISIBILITY, UPDATE_LYRICS_VISIBILITY, UPDATE_RESULTS, UPDATE_NO_RESULTS } from './../types/lyrics';\r\n\r\nexport const refreshLoading = bool => {\r\n    return {\r\n        type: UPDATE_LOADING,\r\n        payload: bool\r\n    }\r\n}\r\n\r\nexport const updateSearchValue = text => {\r\n    return {\r\n        type: UPDATE_SEARCH_VALUE,\r\n        payload: text\r\n    }\r\n}\r\n\r\nexport const showRecents = bool => ({\r\n    type: UPDATE_RECENTS_VISIBILITY,\r\n    payload: bool\r\n})\r\n\r\nexport const showLyrics = array => {\r\n    return {\r\n        type: UPDATE_LYRICS_VISIBILITY,\r\n        payload: array\r\n    }\r\n}\r\n\r\nexport const refreshResults = results => ({\r\n    type: UPDATE_RESULTS,\r\n    payload: results\r\n})\r\n\r\nexport const refreshNoResults = bool => ({\r\n    type: UPDATE_NO_RESULTS,\r\n    payload: bool\r\n})\r\n\r\n\r\n\r\n\r\n","import { createGlobalStyle } from 'styled-components';\r\n\r\n\r\nexport default createGlobalStyle`\r\n  * {\r\n    padding: 0;\r\n    margin: 0;\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  html, body, #root {\r\n    height: 100%;\r\n  }\r\n\r\n  body {    \r\n    font-family: 'Poppins', sans-serif;\r\n    color: #707070;\r\n  }\r\n\r\n  .main {\r\n    display: flex;\r\n    height: 100%;\r\n    flex-direction: column;\r\n  }\r\n\r\n  .content {\r\n    flex: 1;\r\n    padding: 20px 15px;\r\n    position: relative;\r\n  }\r\n\r\n  .Toastify__toast--info {\r\n    background: 'rgb(51, 102, 255)';\r\n  }\r\n  .Toastify__toast--success {\r\n      background: 'rgb(51, 187, 102)';\r\n    }\r\n  .Toastify__toast--warning {\r\n      background: 'blue';\r\n    }\r\n  .Toastify__toast--error {\r\n    background-color: #FF5761 !important;\r\n    box-shadow: rgba(0, 0, 0, 0.176) 0px 3px 8px;\r\n    border-radius: 4px;\r\n  }\r\n  .react-toast-notifications__toast__content {\r\n\r\n  }\r\n\r\n  @media (min-width: 768px) {\r\n    body {\r\n      margin-left: 40%;\r\n    }\r\n\r\n    .content {\r\n      padding: 20px 50px;\r\n    }\r\n  }\r\n`;\r\n\r\n","import axios from 'axios';\r\n\r\nexport const lyricsService = {\r\n  async findLyrics(term) {\r\n    const res = await axios(`https://api.lyrics.ovh/suggest/${term}`);\r\n    return res.data;\r\n  },\r\n\r\n  findLyric(urlEnc) {\r\n    return axios(urlEnc);\r\n  }\r\n};","import styled from \"styled-components\";\r\n\r\nexport const Aside = styled.aside`\r\n  padding: 0 20px; \r\n  margin-top: 25px;   \r\n  text-align: center;\r\n  overflow: hidden;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n\r\n  @media (min-width: 768px) {\r\n    width: 40%;\r\n    height: 100%;            \r\n    background: #7ECDDF;\r\n    margin-top: 0; \r\n    position: fixed;\r\n    z-index: 1;\r\n    top: 0;\r\n    left: 0;\r\n\r\n    & * {\r\n      color: #FFF !important;\r\n    }\r\n  }\r\n`;\r\n\r\n\r\nexport const MainHeader = styled.h1`\r\n  text-transform: uppercase;\r\n  color: #7ECDDF;\r\n  font-size: 40px;\r\n  margin: 0 0 10px;\r\n  font-weight: 500;\r\n  line-height: 1.2;\r\n`;\r\n\r\nexport const SecundaryHeader = styled.h2`\r\n  font-weight: lighter;\r\n  font-size: 28px;\r\n  margin: 0;\r\n  line-height: 1.2;\r\n`;\r\n","import React from 'react';\r\nimport {Aside, MainHeader, SecundaryHeader} from './styles';\r\nimport { GiMusicalNotes } from 'react-icons/gi';\r\n\r\nconst AsideContainer = () => {\r\n  return (\r\n      <Aside>\r\n        <MainHeader>Lyrics</MainHeader>\r\n        <SecundaryHeader>Find Lyrics and sing together <GiMusicalNotes /></SecundaryHeader>\r\n      </Aside>\r\n  );\r\n}\r\n\r\nexport default AsideContainer;","import styled, { keyframes } from \"styled-components\";\r\n\r\nconst show = keyframes`\r\n  0%{ opacity: 0; }\r\n  40%{ opacity: .7; }\r\n  100%{ opacity: 1;}\r\n`;\r\n\r\nexport const BoxLoading = styled.div`\r\n  background-color: rgba(255, 255, 255, .7);\r\n  color: blue;\r\n  position: absolute;\r\n  z-index: 1;\r\n  width: 100%;\r\n  height: 100%;\r\n  top: 0; left: 0;\r\n  animation: ${show} .5s;\r\n`;\r\n\r\n\r\n","import React from 'react';\r\nimport {BoxLoading} from './styles';\r\n\r\nconst Loading = () => {\r\n  return (\r\n      <BoxLoading />\r\n  );\r\n}\r\n\r\nexport default Loading;","import styled from 'styled-components';\r\n\r\nexport const BoxSearch = styled.div`\r\n  position: relative;\r\n  margin-bottom: 30px;\r\n  margin: 30px 15px 0px;\r\n\r\n  @media (min-width: 768px) {\r\n    margin: 30px 50px 0px;\r\n  }\r\n`;\r\n\r\nexport const InputSearch = styled.input`\r\n  width: 100%;\r\n  font-size: 16px;\r\n  font-family: 'Poppins', sans-serif;\r\n  border-radius: 30px;\r\n  border: solid 1px #7ECDDF;\r\n  padding: 10px 20px;\r\n  transition: all .5s;\r\n\r\n  &:focus {\r\n    outline: none;\r\n    box-shadow: 1px 1px 6px #7ECDDF;\r\n  }\r\n`;\r\n\r\nexport const ButtonSearch = styled.button`\r\n  position: absolute;\r\n  right: 10px;\r\n  top: 7px;\r\n  border: none;\r\n  padding: 5px;\r\n  border-radius: 50%;\r\n  background-color: #fff;\r\n  cursor: pointer;\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n\r\n  &:active svg {\r\n    color: #999;\r\n  }\r\n\r\n  svg {\r\n    color: #707070;\r\n  }\r\n`;\r\n\r\nexport const TextAlert = styled.span`\r\n  font-size: 12px;\r\n  margin-left: 25px;\r\n  color: tomato;\r\n  opacity: 0;\r\n  transition: all .5s;\r\n\r\n    &.visible {\r\n      opacity: 1;\r\n  }\r\n`;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { IoIosSearch } from 'react-icons/io';\r\nimport {\r\n  BoxSearch, \r\n  InputSearch, \r\n  ButtonSearch,\r\n  TextAlert\r\n} from './styles';\r\n\r\nconst Search = (props) => {\r\n  return (\r\n    <BoxSearch>\r\n      <InputSearch \r\n        type=\"text\" \r\n        placeholder=\"Type here...\" \r\n        onFocus={(e) => e.target.select()} \r\n        onKeyUp={props.handleKeyUp}\r\n        onChange={(e) => props.handleChange(e.target.value)}\r\n      />        \r\n      <ButtonSearch onClick={props.handleSearch}>\r\n        <IoIosSearch size={22}/>\r\n      </ButtonSearch>\r\n      <TextAlert className={`no-results ${props.noResults ? 'visible' : ''}`}> No lyrics found</TextAlert>\r\n    </BoxSearch>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state)=> {\r\n  return {\r\n    searchValue: state.lyrics.searchValue,\r\n  }\r\n}\r\n\r\n\r\nexport default connect(\r\n  mapStateToProps\r\n)(Search);\r\n","import styled from \"styled-components\";\r\n\r\nexport const BoxRecents = styled.div`\r\n  flex: 1;\r\n`;\r\n\r\nexport const TitleRecents = styled.h1`\r\n  display: block;\r\n  margin: 10px 0 35px;\r\n  font-size: 30px;\r\n  font-weight: 600;\r\n  line-height: normal;\r\n  line-height: 35px;\r\n  color: #000;\r\n\r\n  &::after {\r\n    content: '';\r\n    width: 70px;\r\n    height: 3px;\r\n    background-color: #7ecddf;\r\n    display: block;\r\n    margin-top: 10px;\r\n  }\r\n`;\r\n\r\nexport const RecentsContent = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nexport const RecentsItem = styled.div`\r\n  width: 33%;\r\n  cursor: pointer;\r\n  text-align: center;\r\n  padding: 0 10px 20px;\r\n\r\n  @media (min-width: 992px) {\r\n    max-width: 140px;\r\n  }\r\n\r\n  @media screen and (max-width: 450px),\r\n\t(min-width: 768px) and (max-width: 866px) {\r\n\t\twidth: 50%\r\n  }\r\n\r\n\r\n  &:hover img {\r\n    transform: scale(1.1);\r\n  }\r\n\r\n  img {\r\n    display: block;\r\n    border-radius: 6px;\r\n    margin: 0 auto 8px;\r\n    transition: all .2s;\r\n  }\r\n\r\n  span {\r\n    display: block;\r\n  }\r\n`;\r\n\r\nexport const Song = styled.span`\r\n  font-size: 14px;\r\n  color: #404040;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n`;\r\n\r\nexport const Artist = styled.span`\r\n  font-size: 12px;\r\n`;\r\n\r\nexport const BoxNoRecents = styled.div`\r\n  padding: 0 30px;\r\n  margin: 0 auto;\r\n\r\n  img {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {BoxRecents, TitleRecents, RecentsContent, RecentsItem, Song, Artist, BoxNoRecents} from './styles';\r\nimport Image from './../../assets/images/4.png';\r\n\r\nconst Recents = props => {\r\n  let values;\r\n\r\n  function makePage () {\r\n    if (props.isFirstLoad) {\r\n      values = JSON.parse(localStorage.getItem('lastSearches'));\r\n    } else {\r\n      values = props.recents;\r\n    }\r\n\r\n    return (\r\n      <BoxRecents>\r\n        <TitleRecents>{values !== null ? 'Recents Searches' : 'No Recent Searches'}</TitleRecents>\r\n        <RecentsContent>\r\n          {values !== null ? getRecents(values) : \r\n            <BoxNoRecents>\r\n              <img src={Image} alt=\"website logo\" />\r\n            </BoxNoRecents>\r\n          }\r\n        </RecentsContent>\r\n      </BoxRecents> \r\n    )\r\n  }\r\n\r\n  function getRecents(values) {\r\n    const returnResults = values.map(item => {\r\n      return (\r\n        <RecentsItem key={item.id} onClick={()=> props.lyricsParams(item.id, item.artist, item.song, item.cover)}>\r\n          <img src={item.cover} alt={item.artist}/>\r\n          <Song>{item.song}</Song>\r\n          <Artist>{item.artist}</Artist>\r\n        </RecentsItem>  \r\n      )\r\n    });   \r\n    \r\n    return returnResults;\r\n  }\r\n\r\n  return makePage();\r\n}\r\n\r\nconst mapStateToProps = (state)=> {\r\n  return {\r\n    isFirstLoad: state.lyrics.isFirstLoad,\r\n    recents: state.lyrics.recents,\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps\r\n)(Recents);","import styled from \"styled-components\";\r\n\r\nexport const BoxResults = styled.div`\r\n  position: relative;\r\n`;\r\n\r\nexport const TitleResults = styled.h1`\r\n  display: block;\r\n  margin: 10px 0 35px;\r\n  font-size: 30px;\r\n  font-weight: 600;\r\n  line-height: normal;\r\n  line-height: 35px;\r\n  color: #000;\r\n\r\n    &::after {\r\n      content: '';\r\n      width: 70px;\r\n      height: 3px;\r\n      background-color: #7ecddf;\r\n      display: block;\r\n      margin-top: 10px;\r\n    }\r\n`;\r\n\r\nexport const ResultsItem = styled.div`\r\n  margin-bottom: 15px;\r\n  display: flex;\r\n  align-items: center;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const BoxImg = styled.div`\r\n  min-width: 50px;\r\n  width: 50px;\r\n  height: 50px;\r\n  background: #c1c1c1;\r\n\r\n  img {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport const SongInfo = styled.div`\r\n  margin-left: 15px;\r\n  overflow: hidden;\r\n\r\n  .song-name {\r\n    color: black;\r\n    text-transform: uppercase;\r\n    height: 20px;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    -ms-text-overflow: ellipsis;\r\n    white-space: nowrap;\r\n  }\r\n\r\n  .artist-name {\r\n    font-size: 12px;\r\n  }\r\n`;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {BoxResults, TitleResults, ResultsItem, BoxImg, SongInfo} from './styles';\r\n\r\nconst Results = (props) => {  \r\n\r\n  function suggestions() {\r\n    return props.results.map(item => {\r\n      return (\r\n        <ResultsItem key={item.id} onClick={()=> props.lyricsParams(item.id, item.artist, item.song, item.cover)}>\r\n          <BoxImg>\r\n            <img src={item.artistPicture} alt={item.artist} />\r\n          </BoxImg>\r\n          <SongInfo>\r\n            <div className=\"song-name\">{item.song}</div>\r\n            <div className=\"artist-name\">{item.artist} - {item.album}</div>\r\n          </SongInfo>\r\n        </ResultsItem>  \r\n      )\r\n    });\r\n  }\r\n\r\n  return (\r\n    <BoxResults>      \r\n      <TitleResults>Results: </TitleResults>\r\n      {suggestions()}\r\n    </BoxResults>\r\n  );\r\n}\r\nconst mapStateToProps = (state)=> {\r\n  return {\r\n    results: state.lyrics.results,\r\n\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps\r\n)(Results);","import styled from \"styled-components\";\r\n\r\nexport const Artist = styled.span`\r\n  display: block;\r\n  font-size: 18px;\r\n  font-weight: 400;\r\n  color: #555555;\r\n  text-transform: uppercase;\r\n  letter-spacing: 10px;\r\n`;\r\n\r\nexport const Song = styled.span`\r\n  display: block;\r\n  margin: 10px 0 35px;\r\n  font-size: 30px;\r\n  font-weight: 600;\r\n  line-height: normal;\r\n  line-height: 35px;\r\n  color: #000;\r\n\r\n  &::after {\r\n    content: '';\r\n    width: 70px;\r\n    height: 3px;\r\n    background-color: #7ecddf;\r\n    display: block;\r\n    margin-top: 10px;\r\n  }\r\n`;\r\n\r\nexport const BoxLyrics = styled.pre`\r\n  font-family: 'Poppins', sans-serif;\r\n  white-space: pre-wrap;\r\n`;\r\n\r\nexport const BackButton = styled.button`\r\n  float: right;\r\n  font-size: 14px;\r\n  width: 148px;\r\n  height: 48px;\r\n  border-radius: 5px;\r\n  line-height: 50px;\r\n  font-weight: 500;\r\n  border: none;\r\n  padding: 0 35px;\r\n  margin-top: 15px;\r\n  background-color: #7ecddf;\r\n  text-transform: uppercase;\r\n  color: #FFF;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: #48c4e0;\r\n    color: #FFF;\r\n  }\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport {Artist, Song, BoxLyrics, BackButton} from './styles';\r\n\r\nexport default (props) => {\r\n  return (\r\n    <div>\r\n      <BackButton onClick={() => {props.controlPage(true)}}>Voltar</BackButton>\r\n      <div>\r\n        <Artist>{props.artist}</Artist>\r\n        <Song>{props.song}</Song> \r\n        <BoxLyrics>{props.lyrics}</BoxLyrics>\r\n      </div>\r\n      <BackButton onClick={() => {props.controlPage(true)}}>Voltar</BackButton>\r\n    </div>\r\n  )\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  border-top: 1px solid #e6e6e6;\r\n  padding: 15px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n\r\n  .linkedIn-Profile {\r\n    color: #1d1d1d;\r\n\r\n    &:hover {\r\n      color: #48c4e0;\r\n    } \r\n  }\r\n`;\r\n\r\nexport const Link = styled.a`\r\n  display: block;\r\n  height: 28px;\r\n  color: #707070;\r\n  transition: color .5s;\r\n\r\n  &:hover {\r\n    color: #48c4e0;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { DiGithubBadge } from 'react-icons/di';\r\nimport {Container, Link} from './styles';\r\n\r\nconst Footer = () => {\r\n  return (\r\n      <Container>\r\n          <div>\r\n            Developed by <a className=\"linkedIn-Profile\" href=\"https://www.linkedin.com/in/aline-alves-ferreira\" target=\"_new\">Aline ferreira</a> \r\n          </div>\r\n          <div>\r\n            <Link href=\"https://github.com/AlineAFerreira\" target=\"_new\"><DiGithubBadge size={28} /></Link>\r\n          </div>\r\n      </Container>\r\n  );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { \r\n  refreshLoading, \r\n  updateSearchValue,\r\n  refreshResults,\r\n  refreshNoResults,\r\n  showRecents,\r\n  showLyrics, \r\n} from './store/actions/lyrics';\r\nimport GlobalStyle from './styles';\r\nimport { lyricsService } from './services/lyrics';\r\nimport AsideContainer from './components/AsideContainer';\r\nimport Loading from './components/Loading';\r\nimport Search from './components/Search';\r\nimport Recents from './components/Recents';\r\nimport Results from './components/Results';\r\nimport Lyrics from './components/Lyrics';\r\nimport Footer from './components/Footer';\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.min.css'; \r\n\r\n\r\nconst App = (props) => {\r\n  const keyHandler = (e) => {\r\n    if (e.key === 'Enter') {\r\n      handleSearch();\r\n    }\r\n  }\r\n\r\n  const handleSearch = () => {\r\n    const value = props.searchValue;\r\n    props.refreshLyrics([]);\r\n\r\n    if (value.length >= 3) {\r\n      const enc = encodeURI(value);\r\n      let temp = [];\r\n      props.refreshLoading(true);\r\n      props.setShowRecents(false);\r\n      \r\n      lyricsService.findLyrics(enc)\r\n      .then((res)=> {\r\n        const result = res.data;\r\n        if(result.length) {\r\n          result.forEach((item, index) => {\r\n            temp.push({\r\n              id: item.id,\r\n              song: item.title,\r\n              artist: item.artist.name,\r\n              artistPicture: item.artist.picture,\r\n              album: item.album.title,\r\n              cover: item.album.cover\r\n            });\r\n          });\r\n          props.refreshResults(temp);\r\n        } else {\r\n          props.refreshResults([]);\r\n          props.setShowRecents(true);\r\n          props.setNoResults(true);\r\n        }\r\n        props.refreshLoading(false);\r\n      })\r\n    } else {\r\n      props.refreshResults([]);\r\n      props.setShowRecents(true);\r\n      props.setNoResults(false);\r\n    }\r\n  }\r\n\r\n  const findLyrics = (id, artist, song, cover) => {\r\n    const urlEnc = encodeURI(`https://api.lyrics.ovh/v1/${artist}/${song}`);\r\n    props.refreshLoading(true);\r\n    lyricsService.findLyric(urlEnc)\r\n    .then(res => {\r\n      if (res.data.lyrics) {\r\n        props.refreshLyrics([song, artist, res.data.lyrics]);        \r\n        props.setShowRecents(false);\r\n        props.refreshResults([]);\r\n        storeData(id, artist, song, cover);\r\n      }       \r\n    })\r\n    .catch(error => {\r\n      toast.error('No lyrics found');\r\n    });\r\n    props.refreshLoading(false);\r\n  }\r\n\r\n  //Set data on 'LocalStorage'\r\n  const storeData = (id, a, s, c) => {\r\n    let isOnRecents = false;\r\n    let lastSearch = [];\r\n    const crtSearch = { id: id, artist: a, song: s, cover: c }\r\n\r\n    let result = localStorage.getItem('lastSearches');\r\n    if (result) {\r\n        lastSearch = JSON.parse(result);\r\n        let i;\r\n        for (i = 0; i < lastSearch.length; i++ ) {\r\n            if(lastSearch[i].id === crtSearch.id) {\r\n                isOnRecents = true;\r\n                break;\r\n            }\r\n        };                                \r\n    }\r\n    if(!isOnRecents) lastSearch.push(crtSearch);\r\n    localStorage.setItem('lastSearches', JSON.stringify(lastSearch))\r\n    // setRecents(lastSearch);\r\n  }\r\n \r\n  return (\r\n    <>\r\n      <GlobalStyle />\r\n      <AsideContainer />\r\n      <div className=\"main\">   \r\n        <ToastContainer />\r\n        <Search handleSearch={handleSearch} handleKeyUp={keyHandler} handleChange={props.updateSearchValue} noResults={props.noResults} />\r\n        <div className=\"content\">\r\n          {props.loading &&\r\n            <Loading/>\r\n          }\r\n\r\n          {props.results.length > 0 &&\r\n            <Results lyricsParams={findLyrics} />\r\n          }\r\n\r\n          {props.lyrics.length > 0 &&\r\n            <Lyrics song={props.lyrics[0]} artist={props.lyrics[1]} lyrics={props.lyrics[2]} controlPage={props.displayResults}/>\r\n          }\r\n\r\n          {props.showRecents &&\r\n            <Recents lyricsParams={findLyrics} />\r\n          }\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state)=> {\r\n  return {\r\n    loading: state.lyrics.loading,\r\n    searchValue: state.lyrics.searchValue,\r\n    showRecents: state.lyrics.showRecents,\r\n    lyrics: state.lyrics.lyrics,\r\n    noResults: state.lyrics.noResults,\r\n    results: state.lyrics.results\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n      refreshLoading: bool => {\r\n        dispatch(refreshLoading(bool));\r\n      },\r\n      updateSearchValue: value => {\r\n        dispatch(updateSearchValue(value));\r\n      },      \r\n      refreshResults: array => {\r\n          dispatch(refreshResults(array))\r\n      }, \r\n      setNoResults: array => {\r\n        dispatch(refreshNoResults(array))\r\n      },     \r\n      refreshLyrics: array => {\r\n        dispatch(showLyrics(array))\r\n      },\r\n      displayResults: data => {\r\n        dispatch(showRecents(data))\r\n        dispatch(refreshResults([]))\r\n        dispatch(showLyrics([]))\r\n      },\r\n      setShowRecents: data => {\r\n        dispatch(showRecents(data))\r\n      }\r\n  }\r\n}\r\n\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(App);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {Provider} from 'react-redux';\r\nimport configStore from './store/storeConfig';\r\nimport App from '../src/App';\r\n\r\nconst store = configStore();\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}